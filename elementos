body {
    display: grid;
    /*Define qual vai ser a organização das colunas dentro do CSS GRID
    *No Exemplo abaixo, será criado um gri com duas colulas*/
    grid-template-columns: 50% 50%;
    /*Podemos utilizar uma função para repedir passos
    no exemplo a seguir, serão criadas 12 colunas, ou seja 4 x 3, criou 4x tres colunas, cada uma com 8,33% do espaço total do tamanho */
    grid-template-columns: repeat(4, 8.33% 8.33% 8.33%);
    grid-template-columns: repeat(4, 8.33%);
    /*Serão três colunas, a 1º 200px, a 2º 20% e a 3ª um fragmento, ou seja tudo que sobrou*/
    grid-template-columns: 200px 20% 1fr;
    /*Serão três colunas, mas agora utilizando a unidade fragmento)*/
    grid-template-columns: 3fr 6fr 3fr;

    /*Trabalhando com linhas*/
    grid-template-rows: 50% 25% 12.5% 12.5%;
    /*Exemplo a seguir, a 1ª linhas com 100px, a 2ª com 1 fragmento e a 3ª e 4ª com o que sobrar*/
    grid-template-rows: 100px 1fr;
    /*Exemplo a seguir, 1ª linha com 100px e as outras de forma automática*/
    grid-template-rows: 100px auto auto auto;

    column-gap: 15px;

    gap: 20px 10px;

}

/*Exemplo de como expandir a área de uma célula
inicial na linha 2 e vai até a 4 linhas, da colula*/
.d8 {
    grid-column-start: 2;
    grid-column-end: 4;
    /*Agora o espaçamento das linhas*/
    grid-row-start: 3;
    grid-row-end: 5;
}

/*um exemplo que demontra que devemos ter cuidado para não sobrepor as células.*/
.d10,
.d11 {
    grid-column-start: 1;
    grid-column-end: 3;
    /*As propriedades acima, não gerarar uma sobrepocisão, rederize e veja o resultado no browser*/

    /*Mas se colocarmos a propriedade a seguir, vamos ter uma sobreposição, por ambas as células estarem na mesma linnha.*/
    grid-row-start: 5;
}

/*Se utilizarmos a propriedade z-index, que trabalha com a profundidade dos elementos, ou seja, quem vai ficar na frente de quem?*/

.d10 {
    z-index: 10;
    /*neste caso, o elemento 10 vai ficar na frente porque possui o z-index maior*/
}